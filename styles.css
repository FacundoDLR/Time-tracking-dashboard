@import url("https://fonts.googleapis.com/css2?family=Rubik:wght@300..900&display=swap");

:root {
  --font-primary: "Rubik", sans-serif;
  --font-size-title: 1.125rem;

  --font-wgh-medium: 500;
  --font-wgh-regular: 400;
  --font-wgh-light: 300;

  --Blue: hsl(246, 80%, 60%);

  --Light-orange: hsl(15, 100%, 70%); /* (work) */
  --Soft-blue: hsl(195, 74%, 62%); /* (play) */
  --Light-red: hsl(348, 100%, 68%); /* (study) */
  --Lime-green: hsl(145, 58%, 55%); /* (exercise) */
  --Violet: hsl(264, 64%, 52%); /* (social) */
  --Soft-orange: hsl(43, 84%, 65%); /* (self care) */

  /* Neutral */

  --Very-dark-blue: hsl(226, 43%, 10%);
  --Dark-blue: hsl(235, 46%, 20%);
  --Desaturated-blue: hsl(235, 45%, 61%);
  --Pale-Blue: hsl(236, 100%, 87%);

  --corner-radius: 0.875rem;
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: var(--font-primary);
  background-color: var(--Very-dark-blue);
  flex-direction: column;
  gap: 1.5rem;
  place-content: center;
  padding: 5rem 1.5rem;
}

main {
  display: grid;
  gap: 1.5rem;
}

header {
  padding-block-end: 1.5rem;
}
.user-data,
nav {
  min-width: 12rem;
  height: 8.3125rem; /* 133px */
  border-radius: var(--corner-radius);
}
.user-data {
  background-color: var(--Blue);
  place-content: center;
  justify-items: center;
  position: relative;
}
.user-data_info {
  display: flex;
  gap: 1rem;
}
.user-data_info img {
  width: 4.375rem; /* 70px */
  height: auto;
  border-radius: 50%;
  border: 4px solid white;
}
.user-data_infoName {
  place-content: center;
}
.user-data_infoName p {
  color: var(--Pale-Blue);
}
.user-data_infoName h1 {
  font-size: 1.4rem;
  font-weight: var(--font-wgh-regular);
  color: white;
}

nav {
  background-color: var(--Dark-blue);
  display: flex;
  justify-content: space-evenly;
  align-items: flex-end;
  padding-block-end: 1.5rem;
  margin-top: -4rem;
}
nav label {
  cursor: pointer;
  color: var(--Pale-Blue);
}
input[type="radio"] {
  display: none;
}

input[type="radio"]:checked + label {
  color: white;
  font-weight: var(--font-wgh-medium);
}

label:hover {
  color: white;
}

article {
  min-width: 12rem;
}
/* CARDS COLOR */
.card-color {
  height: 8.3125rem;
  border-radius: var(--corner-radius);
  margin-bottom: -5.8rem;
  position: relative;
  overflow: hidden;
}
main article:nth-child(1) .card-color {
  background-color: var(--Light-orange);
}
main article:nth-child(2) .card-color {
  background-color: var(--Soft-blue);
}
main article:nth-child(3) .card-color {
  background-color: var(--Light-red);
}
main article:nth-child(4) .card-color {
  background-color: var(--Lime-green);
}
main article:nth-child(5) .card-color {
  background-color: var(--Violet);
}
main article:nth-child(6) .card-color {
  background-color: var(--Soft-orange);
}

.card-color figure {
  width: 4.9375rem;
  height: 4.9375rem;
  position: absolute;
  right: 1rem;
  top: -0.6rem;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}
.card-color figure img {
  width: 100%;
  height: auto;
  object-fit: contain;
}
.card-data {
  position: relative;

  height: 8.3125rem;
  border-radius: var(--corner-radius);
  background-color: var(--Dark-blue);
  place-content: center;
  justify-items: center;
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

.card-data:hover:not(:has(svg:hover)) {
  background-color: var(--Desaturated-blue);
  cursor: pointer;
}
svg:hover path {
  fill: white;
  cursor: pointer;
}

.card-data_header strong {
  font-size: var(--font-size-title);
  color: white;
  font-weight: var(--font-wgh-medium);
}

.card-data_info strong {
  font-size: 2em;
  font-weight: var(--font-wgh-light);
  color: white;
}

.card-data_info span {
  color: var(--Pale-Blue);
}
.card-data_header,
.card-data_info {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.attribution {
  display: none;
  font-size: 11px;
  text-align: center;
}

.attribution a {
  color: hsl(228, 45%, 44%);
}

/* TABLET VIEW */
@media screen and (29rem < width < 48rem) {
  header {
    min-width: 24rem;
    place-self: center;
  }
  main {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

/* @media  screen and (48rem < width) {
  body{
    display: flex;
  }
  main{
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
} */
